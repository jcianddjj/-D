#include<stdio.h>
#include<stdlib.h>
#include<string.h>

#define LEN sizeof(struct book)

typedef struct book
{
	int sort;
	char book_name[15];
	char author_name[15];
	int vert_number;
	char publish_unit[15];
	char publish_time[10];
}B;
B *P,*p1,boo;
int num=0,f=0;
int save();
void input();
int get();
void output();
void book_name();
void author_name();
void delet();
void increase();

int main()
{
	int re=1,t,j=0;
	int n,choice;

	while(re==1)
	{
		t=1;
		system("cls");
        printf("          *****************************\n");
		printf("                    主菜单      \n\n");
	    printf("                1.输入信息\n");
	    printf("                2.显示信息\n");
	    printf("                3.查询信息\n");
	    printf("                4.增加信息和删除信息\n");
		printf("                5.退出\n");
		printf("          *****************************");

        printf("\n");
		if(j==1) printf("\n\t选择错误!");
	    printf("\n\t请选择1-5: _\b\b");
	    scanf("%d",&choice);

        switch(choice)
		{
		case 1:
			{
				printf("\n\t1: 输入信息\n");
		        input();

				printf("\n  \t1.返回主菜单;\n\t  2.退出 \n\t\t请选择: _\b\b");
				scanf("%d",&re);
		        break;
			}

        case 2:
			{
		        printf("\n\t2.显示信息\n");
		        output();

				printf("\n\t  1.返回主菜单;\n\t   2.退出\n\t\t请选择: _\b\b");
				scanf("%d",&re);
		        break;
			}

        case 3:
			{
				while(t==1)
				{
					printf("\n\t3.查询信息\n");
				    printf("\n\t 请选择查询方式:\n\t   1.按书名\n\t   2.按作者名\n\t   3.其余任意数字键返回主菜单  _\b\b");
				    scanf("%d",&n);

				    if(n==1)
						book_name();

				    else if(n==2)
				     	author_name();

				    else
					{
						re=1;
				        goto lebel;
					}
				    printf("\n\t  1.返回上一层;\n\t  2.返回主菜单;\n\t  3.退出 \n\t    请选择: _\b\b");
	                scanf("%d",&t);
					if(t==1)
						system("cls");

				    if(t==2)
					    re=1;

				    if(t==3) re=0;
				}
                lebel: break;
			}

		case 4:
			{
				while(t==1||f==1)
				{
					printf("\n\t4.修改信息\n");
				    printf("\n\t  请选择:\n\t   1.增加信息;\n\t   2.删除信息;\n\t    3.其余任意数字键返回主菜单  _\b\b");
				    scanf("%d",&n);

				    if(n==1)
						increase();
				    else if(n==2)
						delet();
				    else
					{
						re=1;
					    goto lebe;
					}
				    printf("\n\t   1.返回上一层;\n\t   2.返回主菜单;\n\t   3.退出 \n\t\t    请选择: _\b\b");
	                scanf("%d",&t);
                    if(t==1)
						system("cls");
				    if(t==2) re=1;
				    if(t==3) re=0;
				}
                lebe: break;
			}

		case 5:
			{
				re=0;
			    break;
			}

		default:
			{
				re=1;
				j=1;
			}
		}
	}
	return 0;
}
int save()
{
	FILE *fp;
	int i,n=0,n1=0;

	if((fp=fopen("book.txt","a+"))==NULL)
		return 0;
fprintf(fp,"%d\n",num);
	for(i=0;i<num;i++)
	{
		fprintf(fp,"%d  %s  %s  %d  %s  %s",P[i].sort,P[i].book_name,
			P[i].author_name,P[i].vert_number,P[i].publish_unit,P[i].publish_time);

		fprintf(fp,"\n");
	}

	fclose(fp);
	return 1;
}
int get()
{
	FILE *fp;
	int i;
	fp=fopen("book.txt","r");

	if(fp==NULL)
		return 0;
	else
	{
		fscanf(fp,"%d",&num);

	    if(num>0)
		{
			P=(B *)malloc(LEN * num);
		    for(i=0;i<num;i++)
			{
				fscanf(fp,"%d%s%s%d%s%s",&P[i].sort,P[i].book_name,
				   P[i].author_name,&P[i].vert_number,P[i].publish_unit,P[i].publish_time);
			}
			fclose(fp);
		    return 1;
		}
		else
		{
			fclose(fp);
			return 0;
		}
	}
}
void input()
{
	int result;

	int i;
	printf("\t\t要输入信息的书籍数量为: __本\b\b");
	scanf("%d",&num);
	if(num>0)
	{
		P=(B *)malloc(LEN * num);

		for(i=0;i<num;i++)
		{
			P[i].sort=i+1;
		    printf("\n\tNO. %d",P[i].sort);
			printf("\n");

			printf("\t请按序输入：书名    作者名   分类号   出版单位  出版时间\n\t\t   ");
			scanf("%s%s%d%s%s",P[i].book_name,P[i].author_name,&P[i].vert_number,P[i].publish_unit,
				P[i].publish_time);

			printf("\n");
		}
	    result=save();

	    if(result==0)
		{
			printf("       \t输入信息失败!\n");
			num = 0;
		}
		if(result==1)
		{
		    printf("        \t成功输入信息!\n");
		}
	}
	else
	{
		num=0;
		printf("          \t输入错误!");
	}
}
void output()
{
	int i;
	get();
	if(get()==1)
	{
		printf("\n\t\t成功获取信息!\n");

	    for(i=0;i<num;i++)
		{
			printf("\n\t\tNO.\t%d\n",P[i].sort);

            printf("\t\t   书名       作者名  序列号   出版单位   出版时间\n");
	    	printf("\t\t %s    %s     %d     %s   %s",P[i].book_name,P[i].author_name,P[i].vert_number,P[i].publish_unit,
				P[i].publish_time);
	    	printf("\n");
		}
	}
	else printf("        \t文件打开错误!");
}
void book_name()
{
	int i;
	int tag=0;
	char ch[15];
		printf("\t       请输入书名: _\b\b");
scanf("%s",ch);

	if(get()==0)
	{
		printf("         \t无法查询!");
		return;
	}
	if(get()==1)
	{
		for(i=0;i<num;i++)
		{
			if(strcmp(P[i].book_name,ch)==0)
			{
				printf("\n\t\t 排列号  书名    作者名  序列号   出版单位  出版时间\n");
				printf("\t\t   %d  %s  %s     %d     %s   %s\n",P[i].sort,P[i].book_name,
			         P[i].author_name,P[i].vert_number,P[i].publish_unit,P[i].publish_time);
			    tag =1;
			}
		}
		if (tag == 0)
		{
			printf("\n      \t没有相关信息!\n");
		}
	}
}

void author_name()
{
	int i;
	int tag=0;
	char ch[15];
	printf("\t        请输入作者名: _\b\b");

	scanf("%s",ch);

	if(get()==0)
	{
		printf("      \t无法查询!");
		return;
	}
	if(get()==1)
	{
		for(i=0;i<num;i++)
			if(strcmp(P[i].author_name,ch)==0)
		{
				printf("\n\t\t  排列号   书名    作者名  序列号   出版单位  出版时间\n");
				printf("\t\t    %d   %s  %s     %d     %s   %s    %d\n",P[i].sort,P[i].book_name,
					P[i].author_name,P[i].vert_number,P[i].publish_unit,P[i].publish_time);
				tag =1;
			}
		if (tag == 0)
		{
			printf("      \t没有相关信息!");
		}
	}
}
void delet()
{
	int t,n,i,y=1;
	int result,z,x;
	t=get();
	if(t==0)
	{
		printf("\n      \t打开文件错误,无法删除!");
		return;
	}
   else if(y==1)
	{
		printf("\n\t   您要删除信息的图书排列号为(1-%d): _\b\b",num);
		scanf("%d",&n);
		if(n>=1&&n<=num)
		{
			for(i=0;i<num;i++)
			{
				if(P[i].sort==n)
				{
					printf("\n\t您即将删除以下信息:\n");

					printf("\t\t  排列号 书名 作者名 序列号 出版单位 出版时间\n");
				    printf("\t\t   %d  %s  %s  %d  %s  %s  %d",P[i].sort,P[i].book_name,
						P[i].author_name,P[i].vert_number,P[i].publish_unit,
						P[i].publish_time);

					printf("\n\n\t  确认请按1;返回请按2;返回上一层请按3   _\b\b");
					scanf("%d",&x);
                    if(x==1)
					{
				        //p1=&boo;
                  printf("\t  您要将信息删除为:\n");
                  printf("\t\t书名: _\b\b");
				        scanf("%s",P[i].book_name);
                  printf("\t\t作者名: _\b\b");
				        scanf("%s",	P[i].author_name);
                  printf("\t\t序列号: _\b\b");
				        scanf("%d",&P[i].vert_number);
                  printf("\t\t出版单位: _\b\b");
				        scanf("%s",P[i].publish_unit);
                  printf("\t\t出版时间: _\b\b");
				        scanf("%s",P[i].publish_time);
                  //printf("\t\t价格: _\b\b");
				        //scanf("%d",&P[i].price);
                  strcpy(P[i].book_name,P[i].book_name);
				        strcpy(P[i].author_name,P[i+1].author_name);
				        P[i].vert_number=P[i+1].vert_number;
				        strcpy(P[i].publish_unit,P[i+1].publish_unit);
				        strcpy(P[i].publish_time,P[i+1].publish_time);
					    //P[i].price=P[i+1].price;
                 y=0;
						z=1;
					}
					else
						if(x==2)
						{
							y=1;z=0;
						}
			        else
					{
						y=0;
					    f=1;
					}
				}
			}
		}
		else
		{
			printf("       \t输入错误,请重新输入:");
			y=1;
		}
		while(z==1)
		{
			result=save();
	        if(result==0)
			{
				printf("\n       \t删除信息失败!\n");
				z=0;
			}
	        if(result==1)
			{
		        printf("\n       \t成功删除信息!\n");
				z=0;
			}
		}

	}
    return;
}
void increase()
{
	int t,n,i,j,y=1;
	int result,z=0,x;

	t=get();
	if(t==0)
	{
		printf("\n        \t打开文件错误,无法增加!");
		return;
	}
    else
		while(y==1)
		{
			printf("\n\t       您要增加信息的图书排列号为(1-%d): _\b\b",num);
		    scanf("%d",&n);

		    if(n>=1&&n<=num)
			{
				for(i=0;i<num;i++)
				{
					if(P[i].sort==n)
					{
						printf("\n\t  您即将增加以下信息:\n");

					    printf("\t\t  排列号 书名 作者名 序列号 出版单位 出版时间\n");
				        printf("\t\t   %d  %s  %s  %d  %s  %s  %d",P[i].sort,P[i].book_name,
						    P[i].author_name,P[i].vert_number,P[i].publish_unit,
				             P[i].publish_time);

				        printf("\n\n\t    确认请按1;返回请按2;返回上一层请按3   _\b\b");
				     	scanf("%d",&x);

					    if(x==1)
						{
							for(j=i;j<num-1;j++)
							{
						        strcpy(P[j].book_name,P[j+1].book_name);
						        strcpy(P[j].author_name,P[j+1].author_name);
						        P[j].vert_number=P[j+1].vert_number;
						        strcpy(P[j].publish_unit,P[j+1].publish_unit);
						        strcpy(P[j].publish_time,P[j+1].publish_time);
						        //P[j].price=P[j+1].price;
							}
					    	num=num-1;
					    	y=0;
						    z=1;
						}
					    else
							if(x==2)
							{
							    y=1;
							}
							else
							{
								y=0;
								f=1;
							}
					}
				}
			}
		else
		{
			printf("       \t输入错误,请重新输入:");
			y=1;
		}
		while(z==1)
		{
			result=save();
	        if(result==0)
			{
				printf("       \n\t增加信息失败!\n");
				z=0;
			}
			if(result==1)
			{
		        printf("       \n\t成功增加信息!\n");
				z=0;
			}
		}

	}
	return;
}
